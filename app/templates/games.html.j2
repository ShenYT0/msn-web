{% extends "page.html.j2" %}

{% block styles %}
<style>
.games-list {
    display: flex;
    flex-wrap: wrap;
    gap: 40px;
    justify-content: center;
    margin: 1em auto 3em;
    align-items: flex-start;
}

.games-list.small {
    gap: 20px;
}
.game {
    width: calc(var(--size-page-width) / 2  - 40px);
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.games-list.small .game {
    width: calc(var(--size-page-width) / 3 - 25px);
}

.game-image {
    height: 300px;
    width: 100%;
    object-fit: cover;
}

.game-platforms {
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: end;
    gap: 6px;
    padding: 0 10px;
}

.game-platforms.image {
    position: relative;
    top: -25px;
    margin-bottom: -35px;
}

{#
.game-platform {
    border-radius: 50%;
    background: white;
    color: black;
    width: 40px;
    height: 40px;
    align-items: center;
    text-align: center;
    line-height: 40px;
}
#}

.game-platform {
    border-radius: 5px;
    padding: 0.2em 0.5em;
    color: black;
    font-size: 0.8em;
}

.game-platform.arcade {
    background: var(--color-red);
}

.game-platform.console {
    background: var(--color-green);
}

.game-platform.pc {
    background: var(--color-light-blue);
}

.game-platform.mobile {
    background: var(--color-yellow);
}

.game-platform.vr {
    background: var(--color-gray);
    color: white;
}

.game-header {
    padding: 0.5em 1em;
    text-align: center;
}

.game-title {
    font-size: 1.3em;
    font-weight: bold;
}

.games-list.small .game-title {
    font-weight: normal;
    font-size: 1.1em;
}

.games-list.small .game-header {
    flex: 1;
}
.game-publisher {
    font-size: 0.75em;
    font-weight: normal;
    font-style: italic;
}

.games-list.small .game-publisher {
    font-size: 1em;
}

.game-content {
    padding: 0.5em 1em;
    flex: 1;
}

.game-description p:first-child {
    margin-top: 0;
}

.games-list.small .links {
    display: flex;
    justify-content: end;
    padding: 0.5em 1em;
    font-size: 0.8em;
}

.game-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5em 1em;
}

.games-list.small .game-bar {
    padding: 0.25em 1em;
}

.games-list.small .stats {
    display: flex;
    justify-content: start;
    align-items: center;
}

.game-bar .members {
    padding: 0 0.5em;
}

.games-list.small .members {
    width: 5em;
}
@media screen and (max-width: 700px) {
    .game-image {
        height: 200px;
    }
}

.page-games h2 {
    text-align: center;
}

#search {
    display: flex;
    gap: 2em;
    justify-content: start;
    align-items: center;
    margin: 1em auto;
}

@media screen and (max-width: 1200px) {
    #search {
        margin: 0 1em;
    }
}

@media screen and (max-width: 700px) {
    #search {
        flex-direction: column;
        gap: 0.25em;
    }
}

#full-list-title {
    scroll-margin-top: 100px;
}
</style>
{% endblock styles %}

{% block content %}

<h2>Jeux mis en avant</h2>

<div class="games-list">
    {% for game in games if game.slug in config.GAMES_SHOWCASE %}
    <div class="game" data-slug="{{ game.slug }}">
        {% if game.image %}
        <img class="game-image" src="{{ game.image_url }}">
        {% endif %}
        <div class="game-platforms {% if game.image %}image{% endif %}">
        {% for platform in game.platforms_short %}
            <div class="game-platform {{ platform | lower }}" title="{{ platform }}">
                {{ platform }}
            </div>
        {% endfor %}
        </div>
        <div class="game-header">
            <div class="game-title">
                {{ game }}
            </div>
            {% if game.publisher %}
            <div class="game-publisher">{{ game.publisher }}</div>
            {% endif %}
            {% if game.start %}
            <div class="game-dates">
                {{ game.start }} - {{ game.end or "Aujourd'hui" }}
            </div>
            {% endif %}
        </div>
        <div class="game-content">
            <div class="game-description">
                {{ (game.description or game.description_short) | markdown }}
            </div>
        </div>
        <div class="game-bar">
            {% if game.db.users | length %}
            <a class="members" href="{{ url_for('users')}}?game={{ game.slug }}">
                {{ game.db.users | length }}
                <span class="material-icons">group</span>
            </a>
            {% else %}
            <div class="members">
                0
                <span class="material-icons">group</span>
            </div>
            {% endif %}
            <div class="links">
                {% if game.page %}
                <a href="{{ url_for('game', slug=game.slug) }}" class="button small">Détails</a>
                {% endif %}
            </div>
        </div>
    </div>
    {% endfor %}
</div>

<h2 id="full-list-title">Tous les jeux</h2>

<form id="search">
    {% with input='platform', label='Plateforme' %}
    {% include "components/forms/select.html.j2" %}
    {% endwith %}

    {% with input='name', label='Nom de jeu' %}
    {% include "components/forms/input.html.j2" %}
    {% endwith %}
</form>

<div class="games-list small" id="full-list">
    {% for game in games %}
    <div
        class="
            game
            {% if game.slug in config.GAMES_SHOWCASE %}showcase{% endif %}
        "
        data-platforms="{{ game.platforms_short | join(',') }}"
        data-name="{{ game }}"
        data-slug="{{ game.slug }}"
    >
        <div class="game-header">
            <div class="game-title">
                {{ game }}
            </div>
            {% if game.publisher or game.start %}
            <div class="small">
                {% if game.publisher %}
                <span class="game-publisher">
                    {{ game.publisher }}
                </span>
                {% endif %}
                {% if game.start %}
                ({{ game.start }} - {{ game.end or "Aujourd'hui" }})
                {% endif %}
            </div>
            {% endif %}
        </div>
        {% if game.description_short %}
        <div class="game-content">
            <div class="game-description">
                {{ game.description_short | markdown }}
            </div>
        </div>
        {% endif %}
        {% if game.platforms %}
        <div class="game-platforms">
        {% for platform in game.platforms_short %}
            <div class="game-platform {{ platform | lower }}" title="{{ platform }}">
                {{ platform }}
            </div>
        {% endfor %}
        </div>
        {% endif %}
        <div class="game-bar">
            {% if game.db.users | length %}
            <a class="members" href="{{ url_for('users')}}?game={{ game.slug }}">
                {{ game.db.users | length }}
                <span class="material-icons">group</span>
            </a>
            {% else %}
            <div class="members">
                0
                <span class="material-icons">group</span>
            </div>
            {% endif %}
            {% if game.page %}
            <div class="links">
                <a href="{{ game.page }}" class="button small">Détails</a>
            </div>
            {% endif %}
        </div>
    </div>
    {% endfor %}
</div>

{% endblock content %}

{% block scripts %}
<script>
{
    const form = document.getElementById('search');
    const platform = form.querySelector('select[name="platform"]');
    const name = form.querySelector('input[name="name"]');
    const games = document.querySelectorAll('#full-list .game');
    const title = document.getElementById('full-list-title');
    let isDefaultPlatform = true;

    function showAll() {
        games.forEach(game => {
            game.style.display = '';
        });
    }

    function filterPlatforms() {
        let value = platform.value || 'Arcade';

        if (value != 'all') {
            games.forEach(game => {
                const platforms = game.dataset.platforms.split(',');
                if (!platforms.includes(value))
                    game.style.display = 'none';
            });
        }

        isDefaultPlatform = value == 'Arcade';

        const url = new URL(window.location);
        if (isDefaultPlatform) {
            url.searchParams.delete('platform');
        } else {
            url.searchParams.set('platform', value);
        }
        window.history.pushState({}, '', url);
    }

    function filterNames() {
        const value = name.value.toLowerCase();

        if (value) {
            games.forEach(game => {
                const gameName = game.dataset.name.toLowerCase();
                if (!(gameName.includes(value) || game.dataset.slug.includes(value)))
                    game.style.display = 'none';
            });
        }

        const url = new URL(window.location);
        url.searchParams.set('name', value);
        window.history.pushState({}, '', url);
    }

    platform.addEventListener('change', filter);
    name.addEventListener('input', filter);

    function filter() {
        showAll();
        filterNames();
        filterPlatforms();
        cleanUrlParams();
    }

    filter();

    if (!isDefaultPlatform || name.value) {
        title.scrollIntoView({ behavior: 'smooth' });
    }
}
</script>
{% endblock scripts %}

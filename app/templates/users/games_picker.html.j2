{% extends "page.html.j2" %}

{% block style %}
<style>
.game {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0.5em auto;
    max-width: var(--width-page-small);
    gap: 0.5em;
    height: 3em;
}

.game > * {
    height: 100%;
}


.game .name {
    border: 1px solid #ccc;
    padding: 0.5em 1em;
    flex: 1;
    background: var(--color-very-light-gray);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.game .name, .game .actions .button {
    border-radius: 0.5em;
}

.game.plays .name {
    background: none;
}

.game .actions .button {
    border: 1px solid;
    background: unset;
    height: 100%;
    transition: .3s;
}

.actions .button.confirm {
    border-color: var(--color-strong-green);
    color: var(--color-strong-green);
}

.actions .button.confirm:hover {
    background: var(--color-light-green);
}

.actions .button.alert {
    border-color: var(--color-strong-red);
    color: var(--color-strong-red);
}

.actions .button.alert:hover {
    background: var(--color-light-red);
}

.game .favorite, .game .unfavorite {
    font-size: 1.5em;
    color: var(--color-strong-yellow);
    {# margin-right: .5em; #}
    display: inline-block;
}

.game .favorite .material-icons, .game .unfavorite .material-icons {
    top: 0.15em;
}

.page h1, .page h2 {
    text-align: center;
}

.game.plays .picker-button[data-action="add"] {
    display: none;
}
.game:not(.plays) .picker-button[data-action="delete"] {
    display: none;
}
.game.favorited .picker-button[data-action="favorite"] {
    display: none;
}
.game:not(.favorited) .picker-button[data-action="unfavorite"],
.game:not(.plays) .picker-button[data-action="favorite"]
{
    display: none;
}

.picker-button {
    cursor: pointer;
}

</style>

{% endblock style %}

{% block content %}

<h1>Ma liste de jeux</h1>

<h2>Jeux populaires</h2>

{% for game in popular_games %}
{% include "components/game_picker_entry.html.j2" %}
{% endfor %}

<h2>Tous les jeux</h2>

{% for game in games %}
{% include "components/game_picker_entry.html.j2" %}
{% endfor %}

{% endblock content %}

{% block scripts %}
<script>
for (let picker of document.querySelectorAll('.picker-button')) {
    const slug = picker.dataset.slug;
    const action = picker.dataset.action;
    const method = {
        favorite: 'PATCH',
        unfavorite: 'PATCH',
        add: 'POST',
        delete: 'DELETE'
    }[action];
    const url = `/api/settings/games/${slug}`;
    const data = {};

    if (['favorite', 'unfavorite'].includes(action))
        data.favorite = !picker.classList.contains('unfavorite');

    picker.addEventListener('click', async () => {
        const response = await fetch(url, {
            method,
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': '{{ csrf_token }}'
            },
            body: JSON.stringify(data)
        });

        if (!response.ok) {
            console.error(response);
            flash('Erreur lors de la mise Ã  jour de vos jeux', 'error');
            return;
        }

        for (let game of document.querySelectorAll(`.game[data-slug="${slug}"]`)) {
            if (action == 'favorite') {
                game.classList.add('favorited');
            } else if (action == 'unfavorite') {
                game.classList.remove('favorited');
            } else if (action == 'add') {
                game.classList.add('plays');
            } else if (action == 'delete') {
                game.classList.remove('favorite');
                game.classList.remove('plays');
            }
        }

        console.log(`Action ${action} on ${slug} successful`);
    });
}
</script>
{% endblock scripts %}

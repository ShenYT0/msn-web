{% extends "page.html.j2" %}

{% block styles %}
<link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""
>
<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/@drustack/leaflet.resetview/dist/L.Control.ResetView.min.css"
>
<link
    rel="stylesheet"
    href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css"
>
<link
    rel="stylesheet"
    href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css"
>
<style>
#map {
    height: 550px;
    max-width: 700px;
    width: 90%;
    margin: auto;
    z-index: 2;
}

#map .user-marker {
    background-color: #333;
    border-radius: 50%;
}
</style>
{% endblock styles %}

{% block content %}

<div id="map"></div>

{% endblock content %}

{% block scripts %}
<script
    src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""
></script>
<script
    src="https://cdn.jsdelivr.net/npm/@drustack/leaflet.resetview/dist/L.Control.ResetView.min.js"
></script>
<script
    src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"
></script>
<script>
    const users = {{ user_points | tojson }};
    onLoad(() => {
        const map = L.map('map');
        const defaultLatLng = [46.45, 2.21];
        const defaultZoom = 6;

        map.attributionControl.setPrefix(false);
        map.setMaxBounds([
            [-90, -180],
            [90, 190],
        ]);
        map.setView(defaultLatLng, defaultZoom);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            minZoom: 2,
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);
        L.control.resetView({
            position: "topleft",
            title: "Reset view",
            latlng: L.latLng(defaultLatLng),
            zoom: defaultZoom,
        }).addTo(map);

        const UserIcon = L.Icon.extend({
            options: {
                iconSize: [32, 32],
                className: 'user-marker',
            }
        });

        const userGroup = L.markerClusterGroup({
            maxClusterRadius: 20,
        });

        for (const point of users) {
            L.marker([point.latitude, point.longitude], {icon: new UserIcon({
                iconUrl: point.icon,
            })}).addTo(userGroup).bindPopup(
                `<a href="${point.link}">${point.name}</a><br>${point.location}`
            );
        }
        userGroup.addTo(map);
    });
</script>
{% endblock scripts %}
